// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(e){"use strict";var r,t="function"==typeof Object.defineProperty?Object.defineProperty:null,n=Object.defineProperty,o=Object.prototype,a=o.toString,i=o.__defineGetter__,l=o.__defineSetter__,u=o.__lookupGetter__,f=o.__lookupSetter__;r=function(){try{return t({},"x",{}),!0}catch(e){return!1}}()?n:function(e,r,t){var n,c,d,_;if("object"!=typeof e||null===e||"[object Array]"===a.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(e,r)||f.call(e,r)?(n=e.__proto__,e.__proto__=o,delete e[r],e[r]=t.value,e.__proto__=n):e[r]=t.value),d="get"in t,_="set"in t,c&&(d||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return d&&i&&i.call(e,r,t.get),_&&l&&l.call(e,r,t.set),e};var c=r;function d(e){return e!=e}var _=Number.NEGATIVE_INFINITY;function p(e){return 0===e&&1/e===_}function y(e,r,t,n,o){var a,i,l,u;if(e<=0)return NaN;if(1===e||0===t)return void 0===(l=n.call(o,r[0],0,0,r))?NaN:l;for(i=t<0?(1-e)*t:0,u=0;u<e&&((a=n.call(o,r[i],u,i,r))!=a||void 0===a);u++)i+=t;if(u===e)return NaN;for(u+=1;u<e;u++)i+=t,void 0===(l=n.call(o,r[i],u,i,r))||d(l)||(l<a||l===a&&p(l))&&(a=l);return a}c(y,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:function(e,r,t,n,o,a){var i,l,u,f;if(e<=0)return NaN;if(1===e||0===t)return void 0===(u=o.call(a,r[0],0,0,r))?NaN:u;for(l=n,f=0;f<e&&((i=o.call(a,r[l],f,l,r))!=i||void 0===i);f++)l+=t;if(f===e)return NaN;for(f+=1;f<e;f++)l+=t,void 0===(u=o.call(a,r[l],f,l,r))||d(u)||(u<i||u===i&&p(u))&&(i=u);return i}});const{ndarray:b}=y;e.default=y,e.ndarray=b,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).nanminBy={});
//# sourceMappingURL=index.js.map

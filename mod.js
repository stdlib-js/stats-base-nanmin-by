// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,l=n.__defineSetter__,i=n.__lookupGetter__,u=n.__lookupSetter__;var c=t,f=function(r,e,t){var c,f,_,v;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(i.call(r,e)||u.call(r,e)?(c=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=c):r[e]=t.value),_="get"in t,v="set"in t,f&&(_||v))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),v&&l&&l.call(r,e,t.set),r},_=e()?c:f;var v=function(r,e,t){_(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})};var p=function(r){return r!=r},d=Number.NEGATIVE_INFINITY;var b=function(r){return 0===r&&1/r===d};function y(r,e,t,n,o){var a,l,i,u;if(r<=0)return NaN;if(1===r||0===t)return void 0===(i=n.call(o,e[0],0,0,e))?NaN:i;for(l=t<0?(1-r)*t:0,u=0;u<r&&((a=n.call(o,e[l],u,l,e))!=a||void 0===a);u++)l+=t;if(u===r)return NaN;for(u+=1;u<r;u++)l+=t,void 0===(i=n.call(o,e[l],u,l,e))||p(i)||(i<a||i===a&&b(i))&&(a=i);return a}v(y,"ndarray",(function(r,e,t,n,o,a){var l,i,u,c;if(r<=0)return NaN;if(1===r||0===t)return void 0===(u=o.call(a,e[0],0,0,e))?NaN:u;for(i=n,c=0;c<r&&((l=o.call(a,e[i],c,i,e))!=l||void 0===l);c++)i+=t;if(c===r)return NaN;for(c+=1;c<r;c++)i+=t,void 0===(u=o.call(a,e[i],c,i,e))||p(u)||(u<l||u===l&&b(u))&&(l=u);return l}));export{y as default};
//# sourceMappingURL=mod.js.map

{
  "version": 3,
  "sources": ["../lib/nanmin_by.js", "../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Calculates the minimum value of a strided array via a callback function, ignoring `NaN` values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array/collection\n* @param {integer} stride - index increment\n* @param {Callback} clbk - callback\n* @param {*} [thisArg] - execution context\n* @returns {number} minimum value\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, NaN, 0.0, -1.0, -3.0 ];\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var v = nanminBy( x.length, x, 1, accessor );\n* // returns -10.0\n*/\nfunction nanminBy( N, x, stride, clbk, thisArg ) {\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\tv = clbk.call( thisArg, x[ 0 ], 0, 0, x );\n\t\tif ( v === void 0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn v;\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tfor ( i = 0; i < N; i++ ) {\n\t\tmin = clbk.call( thisArg, x[ ix ], i, ix, x );\n\t\tif ( min === min && min !== void 0 ) {\n\t\t\tbreak;\n\t\t}\n\t\tix += stride;\n\t}\n\tif ( i === N ) {\n\t\treturn NaN;\n\t}\n\ti += 1;\n\tfor ( i; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = clbk.call( thisArg, x[ ix ], i, ix, x );\n\t\tif ( v === void 0 || isnan( v ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\tmin = v;\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nanminBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\n\n\n// MAIN //\n\n/**\n* Calculates the minimum value of a strided array via a callback function, ignoring `NaN` values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Collection} x - input array/collection\n* @param {integer} stride - index increment\n* @param {NonNegativeInteger} offset - starting index\n* @param {Callback} clbk - callback\n* @param {*} [thisArg] - execution context\n* @returns {number} minimum value\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, NaN, 0.0, -1.0, -3.0 ];\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var v = nanminBy( x.length, x, 1, 0, accessor );\n* // returns -10.0\n*/\nfunction nanminBy( N, x, stride, offset, clbk, thisArg ) {\n\tvar min;\n\tvar ix;\n\tvar v;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || stride === 0 ) {\n\t\tv = clbk.call( thisArg, x[ 0 ], 0, 0, x );\n\t\tif ( v === void 0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn v;\n\t}\n\tix = offset;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tmin = clbk.call( thisArg, x[ ix ], i, ix, x );\n\t\tif ( min === min && min !== void 0 ) {\n\t\t\tbreak;\n\t\t}\n\t\tix += stride;\n\t}\n\tif ( i === N ) {\n\t\treturn NaN;\n\t}\n\ti += 1;\n\tfor ( i; i < N; i++ ) {\n\t\tix += stride;\n\t\tv = clbk.call( thisArg, x[ ix ], i, ix, x );\n\t\tif ( v === void 0 || isnan( v ) ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( v < min || ( v === min && isNegativeZero( v ) ) ) {\n\t\t\tmin = v;\n\t\t}\n\t}\n\treturn min;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nanminBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar nanminBy = require( './nanmin_by.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( nanminBy, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = nanminBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the minimum value of a strided array via a callback function and ignoring `NaN` values.\n*\n* @module @stdlib/stats-base-nanmin-by\n*\n* @example\n* var nanminBy = require( '@stdlib/stats-base-nanmin-by' );\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, NaN, 0.0, -1.0, -3.0 ];\n*\n* var v = nanminBy( x.length, x, 1, accessor );\n* // returns -10.0\n*\n* @example\n* var nanminBy = require( '@stdlib/stats-base-nanmin-by' );\n*\n* function accessor( v ) {\n*     return v * 2.0;\n* }\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, NaN, 0.0, -1.0, -3.0 ];\n*\n* var v = nanminBy.ndarray( x.length, x, 1, 0, accessor );\n* // returns -10.0\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n\n// exports: { \"ndarray\": \"main.ndarray\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAiB,QAAS,2CAA4C,EAyB1E,SAASC,EAAUC,EAAGC,EAAGC,EAAQC,EAAMC,EAAU,CAChD,IAAIC,EACAC,EACAC,EACAC,EAEJ,GAAKR,GAAK,EACT,MAAO,KAER,GAAKA,IAAM,GAAKE,IAAW,EAE1B,OADAK,EAAIJ,EAAK,KAAMC,EAASH,EAAG,CAAE,EAAG,EAAG,EAAGA,CAAE,EACnCM,IAAM,OACH,IAEDA,EAOR,IALKL,EAAS,EACbI,GAAM,EAAEN,GAAKE,EAEbI,EAAK,EAEAE,EAAI,EAAGA,EAAIR,IAChBK,EAAMF,EAAK,KAAMC,EAASH,EAAGK,CAAG,EAAGE,EAAGF,EAAIL,CAAE,EACvC,EAAAI,IAAQA,GAAOA,IAAQ,SAFTG,IAKnBF,GAAMJ,EAEP,GAAKM,IAAMR,EACV,MAAO,KAGR,IADAQ,GAAK,EACCA,EAAGA,EAAIR,EAAGQ,IACfF,GAAMJ,EACNK,EAAIJ,EAAK,KAAMC,EAASH,EAAGK,CAAG,EAAGE,EAAGF,EAAIL,CAAE,EACrC,EAAAM,IAAM,QAAUV,EAAOU,CAAE,KAGzBA,EAAIF,GAASE,IAAMF,GAAOP,EAAgBS,CAAE,KAChDF,EAAME,GAGR,OAAOF,CACR,CAKAT,EAAO,QAAUG,IChGjB,IAAAU,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAiB,QAAS,2CAA4C,EA0B1E,SAASC,EAAUC,EAAGC,EAAGC,EAAQC,EAAQC,EAAMC,EAAU,CACxD,IAAIC,EACAC,EACAC,EACAC,EAEJ,GAAKT,GAAK,EACT,MAAO,KAER,GAAKA,IAAM,GAAKE,IAAW,EAE1B,OADAM,EAAIJ,EAAK,KAAMC,EAASJ,EAAG,CAAE,EAAG,EAAG,EAAGA,CAAE,EACnCO,IAAM,OACH,IAEDA,EAGR,IADAD,EAAKJ,EACCM,EAAI,EAAGA,EAAIT,IAChBM,EAAMF,EAAK,KAAMC,EAASJ,EAAGM,CAAG,EAAGE,EAAGF,EAAIN,CAAE,EACvC,EAAAK,IAAQA,GAAOA,IAAQ,SAFTG,IAKnBF,GAAML,EAEP,GAAKO,IAAMT,EACV,MAAO,KAGR,IADAS,GAAK,EACCA,EAAGA,EAAIT,EAAGS,IACfF,GAAML,EACNM,EAAIJ,EAAK,KAAMC,EAASJ,EAAGM,CAAG,EAAGE,EAAGF,EAAIN,CAAE,EACrC,EAAAO,IAAM,QAAUX,EAAOW,CAAE,KAGzBA,EAAIF,GAASE,IAAMF,GAAOR,EAAgBU,CAAE,KAChDF,EAAME,GAGR,OAAOF,CACR,CAKAV,EAAO,QAAUG,IC7FjB,IAAAW,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAW,IACXC,EAAU,IAKdF,EAAaC,EAAU,UAAWC,CAAQ,EAK1CH,EAAO,QAAUE,ICkBjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_nanmin_by", "__commonJSMin", "exports", "module", "isnan", "isNegativeZero", "nanminBy", "N", "x", "stride", "clbk", "thisArg", "min", "ix", "v", "i", "require_ndarray", "__commonJSMin", "exports", "module", "isnan", "isNegativeZero", "nanminBy", "N", "x", "stride", "offset", "clbk", "thisArg", "min", "ix", "v", "i", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "nanminBy", "ndarray", "main"]
}
